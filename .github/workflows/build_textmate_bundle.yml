name: Build and Release TextMate Bundle

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for the release'
        required: true

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y uuid-runtime jq

      - name: Run Script
        run: |
          chmod +x ./build_textmate_bundle.sh
          ./build_textmate_bundle.sh

      - name: Zip the Bundle
        run: |
          zip -r astra.tmbundle.zip astra.tmbundle

      - name: Get Tag Name
        id: get_tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "TAG_NAME=${{ github.event.inputs.tag_name }}" >> $GITHUB_OUTPUT
          else
            echo "TAG_NAME=${{ github.ref }}" >> $GITHUB_OUTPUT
          fi

      - name: Create Tag (if needed)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag ${{ steps.get_tag.outputs.TAG_NAME }} ${{ github.sha }}
          git push origin ${{ steps.get_tag.outputs.TAG_NAME }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag.outputs.TAG_NAME }}
          release_name: ${{ steps.get_tag.outputs.TAG_NAME }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./astra.tmbundle.zip
          asset_name: astra.tmbundle.zip
          asset_content_type: application/zip
